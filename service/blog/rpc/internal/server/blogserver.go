// Code generated by goctl. DO NOT EDIT!
// Source: blog.proto

package server

import (
	"context"

	"qianxi-blog/service/blog/rpc/blog"
	"qianxi-blog/service/blog/rpc/internal/logic"
	"qianxi-blog/service/blog/rpc/internal/svc"
)

type BlogServer struct {
	svcCtx *svc.ServiceContext
}

func NewBlogServer(svcCtx *svc.ServiceContext) *BlogServer {
	return &BlogServer{
		svcCtx: svcCtx,
	}
}

func (s *BlogServer) Posts(ctx context.Context, in *blog.PageReq) (*blog.PageReply, error) {
	l := logic.NewPostsLogic(ctx, s.svcCtx)
	return l.Posts(in)
}

func (s *BlogServer) PostCount(ctx context.Context, in *blog.CountReq) (*blog.CountReply, error) {
	l := logic.NewPostCountLogic(ctx, s.svcCtx)
	return l.PostCount(in)
}

func (s *BlogServer) CommentCount(ctx context.Context, in *blog.CountReq) (*blog.CountReply, error) {
	l := logic.NewCommentCountLogic(ctx, s.svcCtx)
	return l.CommentCount(in)
}

func (s *BlogServer) Update(ctx context.Context, in *blog.UpdateReq) (*blog.UpdateReply, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *BlogServer) Post(ctx context.Context, in *blog.PostReq) (*blog.PostReply, error) {
	l := logic.NewPostLogic(ctx, s.svcCtx)
	return l.Post(in)
}

func (s *BlogServer) Delete(ctx context.Context, in *blog.DeleteReq) (*blog.DeleteReply, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}

func (s *BlogServer) UpdateWithContent(ctx context.Context, in *blog.UpdateReq) (*blog.UpdateReply, error) {
	l := logic.NewUpdateWithContentLogic(ctx, s.svcCtx)
	return l.UpdateWithContent(in)
}

func (s *BlogServer) Insert(ctx context.Context, in *blog.InsertReq) (*blog.InsertReply, error) {
	l := logic.NewInsertLogic(ctx, s.svcCtx)
	return l.Insert(in)
}

func (s *BlogServer) Comments(ctx context.Context, in *blog.PageReq) (*blog.CommentPageReply, error) {
	l := logic.NewCommentsLogic(ctx, s.svcCtx)
	return l.Comments(in)
}

func (s *BlogServer) DeleteComment(ctx context.Context, in *blog.CommentDeleteReq) (*blog.CommentDeleteReply, error) {
	l := logic.NewDeleteCommentLogic(ctx, s.svcCtx)
	return l.DeleteComment(in)
}

func (s *BlogServer) SystemInfo(ctx context.Context, in *blog.SystemInfoReq) (*blog.SystemInfoReply, error) {
	l := logic.NewSystemInfoLogic(ctx, s.svcCtx)
	return l.SystemInfo(in)
}

func (s *BlogServer) SystemInfoAll(ctx context.Context, in *blog.SystemInfoAllReq) (*blog.SystemInfoAllReply, error) {
	l := logic.NewSystemInfoAllLogic(ctx, s.svcCtx)
	return l.SystemInfoAll(in)
}

func (s *BlogServer) UpdateSystemInfo(ctx context.Context, in *blog.UpdateSystemInfoReq) (*blog.UpdateSystemInfoReply, error) {
	l := logic.NewUpdateSystemInfoLogic(ctx, s.svcCtx)
	return l.UpdateSystemInfo(in)
}

func (s *BlogServer) VisitedCount(ctx context.Context, in *blog.CountReq) (*blog.CountReply, error) {
	l := logic.NewVisitedCountLogic(ctx, s.svcCtx)
	return l.VisitedCount(in)
}

func (s *BlogServer) PeopleCount(ctx context.Context, in *blog.CountReq) (*blog.CountReply, error) {
	l := logic.NewPeopleCountLogic(ctx, s.svcCtx)
	return l.PeopleCount(in)
}

func (s *BlogServer) WeekCount(ctx context.Context, in *blog.CountReq) (*blog.WeekCountReply, error) {
	l := logic.NewWeekCountLogic(ctx, s.svcCtx)
	return l.WeekCount(in)
}
