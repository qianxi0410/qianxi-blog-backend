// Code generated by goctl. DO NOT EDIT!
// Source: blog.proto

package blogclient

import (
	"context"

	"qianxi-blog/service/blog/rpc/blog"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	PageReq     = blog.PageReq
	PageReply   = blog.PageReply
	UpdateReq   = blog.UpdateReq
	Post        = blog.Post
	CountReq    = blog.CountReq
	CountReply  = blog.CountReply
	UpdateReply = blog.UpdateReply
	PostReq     = blog.PostReq
	PostReply   = blog.PostReply
	DeleteReq   = blog.DeleteReq
	DeleteReply = blog.DeleteReply
	InsertReq   = blog.InsertReq
	InsertReply = blog.InsertReply

	Blog interface {
		Posts(ctx context.Context, in *PageReq) (*PageReply, error)
		PostCount(ctx context.Context, in *CountReq) (*CountReply, error)
		CommentCount(ctx context.Context, in *CountReq) (*CountReply, error)
		Update(ctx context.Context, in *UpdateReq) (*UpdateReply, error)
		Post(ctx context.Context, in *PostReq) (*PostReply, error)
		Delete(ctx context.Context, in *DeleteReq) (*DeleteReply, error)
		UpdateWithContent(ctx context.Context, in *UpdateReq) (*UpdateReply, error)
		Insert(ctx context.Context, in *InsertReq) (*InsertReply, error)
	}

	defaultBlog struct {
		cli zrpc.Client
	}
)

func NewBlog(cli zrpc.Client) Blog {
	return &defaultBlog{
		cli: cli,
	}
}

func (m *defaultBlog) Posts(ctx context.Context, in *PageReq) (*PageReply, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.Posts(ctx, in)
}

func (m *defaultBlog) PostCount(ctx context.Context, in *CountReq) (*CountReply, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.PostCount(ctx, in)
}

func (m *defaultBlog) CommentCount(ctx context.Context, in *CountReq) (*CountReply, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.CommentCount(ctx, in)
}

func (m *defaultBlog) Update(ctx context.Context, in *UpdateReq) (*UpdateReply, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.Update(ctx, in)
}

func (m *defaultBlog) Post(ctx context.Context, in *PostReq) (*PostReply, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.Post(ctx, in)
}

func (m *defaultBlog) Delete(ctx context.Context, in *DeleteReq) (*DeleteReply, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.Delete(ctx, in)
}

func (m *defaultBlog) UpdateWithContent(ctx context.Context, in *UpdateReq) (*UpdateReply, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.UpdateWithContent(ctx, in)
}

func (m *defaultBlog) Insert(ctx context.Context, in *InsertReq) (*InsertReply, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.Insert(ctx, in)
}
