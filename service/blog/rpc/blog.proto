syntax = "proto3";

package blog;

option go_package = "blog";

message PageReq {
  int64 page = 1;
  int64 size = 2;
}

message Post {
  int64 id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  string  title = 4;
  string description = 5;
  int64 pre = 6;
  int64 next = 7;
  string url = 8;
  string path = 9;
  string tags = 10;
}

message Comment {
  int64  id = 1;
  int64 created_at = 2;
  int64 updateed_at = 3;
  string content = 4;
  string login = 5;
  string name = 6;
  string avatar = 7;
  int64 post_id = 8;
}

message PageReply {
  repeated Post posts = 1;
}

message CommentPageReply {
  repeated Comment comments = 1;
}

message CountReq {}

message CountReply {
  int64 count = 1;
}

message UpdateReq {
  Post post = 1;
  int64 page = 2;
  int64  size = 3;
}

message UpdateReply {
}

message PostReq {
  int64 id = 1;
}

message PostReply {
  Post post = 1;
}

message DeleteReq {
   int64 id = 1;
   int64 page = 2;
   int64 size = 3;
}

message DeleteReply {

}

message InsertReq {
  string title = 1;
  string description = 2;
  string url = 3;
  string path = 4;
  string tags = 5;
}

message InsertReply {

}

message CommentDeleteReq {
  int64 id = 1;
  int64 post_id = 2;
}

message CommentDeleteReply {

}

message SystemInfoReq {
  string key = 1;
}

message SystemInfoReply {
  string value = 2;
}

message SystemInfoAllReq {

}

message SystemInfoAllReply {
  map<string, string> kv = 1;
}

message UpdateSystemInfoReq {
  string key = 1;
  string value = 2;
}

message UpdateSystemInfoReply {

}

service blog {
  rpc posts(PageReq) returns(PageReply);

  rpc postCount(CountReq) returns(CountReply);

  rpc commentCount(CountReq) returns (CountReply);

  rpc update(UpdateReq) returns (UpdateReply);

  rpc post(PostReq) returns (PostReply);

  rpc delete(DeleteReq) returns (DeleteReply);

  rpc updateWithContent(UpdateReq) returns (UpdateReply);

  rpc insert(InsertReq) returns (InsertReply);

  rpc comments(PageReq) returns (CommentPageReply);

  rpc deleteComment(CommentDeleteReq) returns (CommentDeleteReply);

  rpc systemInfo(SystemInfoReq) returns (SystemInfoReply);

  rpc systemInfoAll(SystemInfoAllReq) returns (SystemInfoAllReply);

  rpc updateSystemInfo(UpdateSystemInfoReq) returns (UpdateSystemInfoReply);
}